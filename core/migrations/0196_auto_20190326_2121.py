# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-03-26 21:21
from __future__ import unicode_literals

import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0195_bandsubscription_organizationsubscription_venuesubscription'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppCardTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('total', models.DecimalField(decimal_places=2, help_text='The total amount that the user has pledged', max_digits=6, validators=[core.validators.non_negative], verbose_name='Total amount pledged')),
                ('redpine_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='The amount that the user has paid to RedPine', max_digits=6, validators=[core.validators.non_negative], verbose_name="RedPine's fee")),
                ('count', models.IntegerField(help_text='The number of tickets the user will receive should the campaign succeed', verbose_name='Number of tickets')),
                ('payouts_processed', models.BooleanField(default=False, help_text='Whether or not the funds from this pledge have already been distributed to performers.')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('bands', models.ManyToManyField(related_name='card_transactions', to='core.CampaignBand', verbose_name='Going to see')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_transactions', to='core.Campaign')),
                ('processed_by', models.ForeignKey(help_text='The user who processed the transaction', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppCardTransactionPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('quantity', models.IntegerField(help_text='The number of purchased items of this type.')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PurchaseItem')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='core.AppCardTransaction')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppCashTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('total', models.DecimalField(decimal_places=2, help_text='The total amount that the user has pledged', max_digits=6, validators=[core.validators.non_negative], verbose_name='Total amount pledged')),
                ('redpine_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='The amount that the user has paid to RedPine', max_digits=6, validators=[core.validators.non_negative], verbose_name="RedPine's fee")),
                ('count', models.IntegerField(help_text='The number of tickets the user will receive should the campaign succeed', verbose_name='Number of tickets')),
                ('payouts_processed', models.BooleanField(default=False, help_text='Whether or not the funds from this pledge have already been distributed to performers.')),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('bands', models.ManyToManyField(related_name='cash_transactions', to='core.CampaignBand', verbose_name='Going to see')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_transactions', to='core.Campaign')),
                ('processed_by', models.ForeignKey(help_text='The user who processed the transaction', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppCashTransactionPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('quantity', models.IntegerField(help_text='The number of purchased items of this type.')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PurchaseItem')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='core.AppCashTransaction')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='bandsubscription',
            options={'verbose_name_plural': 'Subscriptions (Bands)'},
        ),
        migrations.AlterModelOptions(
            name='organizationsubscription',
            options={'verbose_name_plural': 'Subscriptions (Organizations)'},
        ),
        migrations.AlterModelOptions(
            name='venuesubscription',
            options={'verbose_name_plural': 'Subscriptions (Venues)'},
        ),
    ]

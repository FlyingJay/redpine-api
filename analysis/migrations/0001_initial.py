# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-02-08 15:31
from __future__ import unicode_literals

import core.validators
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Band',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('created_by', models.ForeignKey(help_text='The user that created the band', on_delete=django.db.models.deletion.CASCADE, related_name='bands', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('archived', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=200, null=True)),
                ('goal_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('goal_count', models.IntegerField(default=0)),
                ('funding_type', models.IntegerField(choices=[(0, 'GOAL_AMOUNT'), (1, 'GOAL_COUNT')], default=0)),
                ('seating_type', models.IntegerField(choices=[(0, 'FIRST_COME_FIRST_SEATING')], default=0)),
                ('min_ticket_price', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('funding_start', models.DateTimeField(null=True)),
                ('funding_end', models.DateTimeField(null=True)),
                ('is_open', models.BooleanField(default=False, help_text='Whether the campaign bands may change or not')),
                ('is_venue_approved', models.NullBooleanField(choices=[(None, 'null'), (True, 'true'), (False, 'false')], default=None, help_text='Whether the venue has confirmed the campaign')),
                ('is_successful', models.BooleanField(default=False, help_text='Whether the campaign has been fully funded or not')),
                ('created_by', models.ForeignKey(help_text='The user who created the campaign', on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Campaign_Fact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('archived', models.BooleanField(default=False)),
                ('timeslot_listed', models.DateTimeField(null=True)),
                ('campaign_start', models.DateTimeField(null=True)),
                ('campaign_success', models.DateTimeField(null=True)),
                ('is_successful', models.NullBooleanField(choices=[(None, 'null'), (True, 'true'), (False, 'false')])),
                ('campaign_goal', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('gross_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('band', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Band')),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Campaign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Pledge_Fact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('archived', models.BooleanField(default=False)),
                ('gross_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('quantity', models.IntegerField(null=True)),
                ('is_paid', models.NullBooleanField(choices=[(None, 'null'), (True, 'true'), (False, 'false')])),
                ('band', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Band')),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Campaign')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Timeslot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('asking_price', models.DecimalField(decimal_places=2, max_digits=6, null=True, validators=[core.validators.non_negative])),
                ('min_headcount', models.IntegerField(null=True, validators=[core.validators.non_negative])),
                ('start_time', models.DateTimeField(null=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('booked', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('archived', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=200, null=True)),
                ('capacity', models.IntegerField(null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('postal_code', models.CharField(max_length=20, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('currency', models.CharField(choices=[('cad', 'CAD'), ('usd', 'USD')], default='cad', help_text='The currency that the venue operates in', max_length=3)),
                ('timezone', timezone_field.fields.TimeZoneField(default='America/Toronto')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='timeslot',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='timeslots', to='analysis.Venue'),
        ),
        migrations.AddField(
            model_name='pledge_fact',
            name='timeslot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Timeslot'),
        ),
        migrations.AddField(
            model_name='pledge_fact',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='pledge_fact',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Venue'),
        ),
        migrations.AddField(
            model_name='location',
            name='province',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Province'),
        ),
        migrations.AddField(
            model_name='campaign_fact',
            name='timeslot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Timeslot'),
        ),
        migrations.AddField(
            model_name='campaign_fact',
            name='venue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.Venue'),
        ),
    ]
